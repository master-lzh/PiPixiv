name: Dev Builds
on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      name:
        description: "Dev-Build"
        default: "Generate dev build"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Set up gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Decode Keystore
        env:
          ENCODED_STRING: ${{ secrets.KEYSTORE_BASE_64 }}
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}

        run: |
          echo ${{ github.ref }}
          echo $ENCODED_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > pipixiv.jks

      - name: Add Google Services
        env:
          GOOGLE_SERVICE_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}

        run: |
          echo $GOOGLE_SERVICE_JSON > app/google-services.json

      - name: Build Default Release apk
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assembleDefaultRelease -PapplyFirebasePlugins=true --stacktrace
      - name: Build Foss Release apk
        env:
          RELEASE_KEYSTORE_PASSWORD: ${{ secrets.RELEASE_KEYSTORE_PASSWORD }}
          RELEASE_KEYSTORE_ALIAS: ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
          RELEASE_KEY_PASSWORD: ${{ secrets.RELEASE_KEY_PASSWORD }}
        run: ./gradlew assembleFossRelease -PapplyFirebasePlugins=false --stacktrace

      - name: Get release file apk path
        id: releaseApk
        run: echo "apkfile=$(find app/build/outputs/apk/release/*.apk)" >> $GITHUB_OUTPUT

      - name: Upload Release Build to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: ${{ steps.releaseApk.outputs.apkfile }}

      - name: Get tag name
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          set -x
          echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: PiPixiv ${{ env.VERSION_TAG }}
          body: |
            Release ${{ env.VERSION_TAG }}
          draft: true
          prerelease: false
          files: |
            ${{ steps.releaseApk.outputs.apkfile }}

